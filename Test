_G.theme = _G.grabtheme

local versionNumber = "1.0"
local version = "DustWare v"..versionNumber

local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()

local UI = Material.Load({
     Title = version,
     Style = 3,
     SizeX = 400,
     SizeY = 300,
     Theme _G.theme
})

local Page = UI.New({
    Title = "Main Functions"
})

local Misc = UI.New({
    Title = "Miscellaneous"
})

local Mods = UI.New({
    Title = "Gun Mod Functions"
})

local Visu = UI.New({
    Title = "Visual Functions"
})

local Effe = UI.New({
    Title = "Effect Functions"
})

-- Variables for Functions.

local Lighting = game:GetService("Lighting")
local Doors = game.Workspace:GetChildren()
local InfJumpToggle = false
local UIS = game:GetService("UserInputService")
local plr = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local event = game.ReplicatedStorage.RemoteEvents.HarvestEvent
local AutoFarmEnabled = false
local storage = workspace.BuiltObjects:GetDescendants()

-- Actual Fucking Functions.

Page.Button({
    Text = "Aimbot and ESP",
    Callback = function()
        pcall(function()
	    	loadstring(game:HttpGet("https://raw.githubusercontent.com/Herrtt/AimHot-v8/master/Main.lua", true))()
    	end)
    end,
    Menu = {
        Info = function(self)
            UI.Banner({
                Text = "Press the Button and Enjoy the Universal Aimbot and ESP! The Toggle UI key for the Aimbot + ESP is Right ALT"
            })
        end,
    }
})
            
Page.Button({
    Text = "Fullbright",
    Callback = function()
        function dofullbright()
            Lighting.Ambient = Color3.new(1, 1, 1)
            Lighting.ColorShift_Bottom = Color3.new(1, 1, 1)
            Lighting.ColorShift_Top = Color3.new(1, 1, 1)
        end

        dofullbright()

        Lighting.LightingChanged:Connect(dofullbright)
    end,
    Menu = {
        Info = function(self)
            UI.Banner({
                Text = "Fullbright is not Toggleable, This is your fault niggas."
            })
        end,
    }
})

Page.Button({
    Text = "Open Key Doors",
    Callback = function()
        for i,v in pairs(Doors) do
            if v.Name == "KeyDoor" then
                v:Destroy()
            end
        end
    end,
    Menu = {
        Info = function(self)
            UI.Banner({
                Text = "Opens all doors that are opened using a Key or a Keycard"
            })
        end
    }
})

Page.Button({
    Text = "Freecam",
    Callback = function()
        local pi    = math.pi
        local abs   = math.abs
        local clamp = math.clamp
        local exp   = math.exp
        local rad   = math.rad
        local sign  = math.sign
        local sqrt  = math.sqrt
        local tan   = math.tan
        
        local ContextActionService = game:GetService("ContextActionService")
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local StarterGui = game:GetService("StarterGui")
        local UserInputService = game:GetService("UserInputService")
        local Workspace = game:GetService("Workspace")
        
        local LocalPlayer = Players.LocalPlayer
        if not LocalPlayer then
            Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
            LocalPlayer = Players.LocalPlayer
        end
        
        local Camera = Workspace.CurrentCamera
        Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
            local newCamera = Workspace.CurrentCamera
            if newCamera then
                Camera = newCamera
            end
        end)
        
        
        local TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value
        local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
        local FREECAM_MACRO_KB = {Enum.KeyCode.LeftShift, Enum.KeyCode.P}
        
        local NAV_GAIN = Vector3.new(1, 1, 1)*64
        local PAN_GAIN = Vector2.new(0.75, 1)*8
        local FOV_GAIN = 300
        
        local PITCH_LIMIT = rad(90)
        
        local VEL_STIFFNESS = 1.5
        local PAN_STIFFNESS = 1.0
        local FOV_STIFFNESS = 4.0
        
        
        local Spring = {} do
            Spring.__index = Spring
        
            function Spring.new(freq, pos)
                local self = setmetatable({}, Spring)
                self.f = freq
                self.p = pos
                self.v = pos*0
                return self
            end
        
            function Spring:Update(dt, goal)
                local f = self.f*2*pi
                local p0 = self.p
                local v0 = self.v
        
                local offset = goal - p0
                local decay = exp(-f*dt)
        
                local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
                local v1 = (f*dt*(offset*f - v0) + v0)*decay
        
                self.p = p1
                self.v = v1
        
                return p1
            end
        
            function Spring:Reset(pos)
                self.p = pos
                self.v = pos*0
            end
        end
        
        
        local cameraPos = Vector3.new()
        local cameraRot = Vector2.new()
        local cameraFov = 0
        
        local velSpring = Spring.new(VEL_STIFFNESS, Vector3.new())
        local panSpring = Spring.new(PAN_STIFFNESS, Vector2.new())
        local fovSpring = Spring.new(FOV_STIFFNESS, 0)
        
        
        local Input = {} do
            local thumbstickCurve do
                local K_CURVATURE = 2.0
                local K_DEADZONE = 0.15
        
                local function fCurve(x)
                    return (exp(K_CURVATURE*x) - 1)/(exp(K_CURVATURE) - 1)
                end
        
                local function fDeadzone(x)
                    return fCurve((x - K_DEADZONE)/(1 - K_DEADZONE))
                end
        
                function thumbstickCurve(x)
                    return sign(x)*clamp(fDeadzone(abs(x)), 0, 1)
                end
            end
        
            local gamepad = {
                ButtonX = 0,
                ButtonY = 0,
                DPadDown = 0,
                DPadUp = 0,
                ButtonL2 = 0,
                ButtonR2 = 0,
                Thumbstick1 = Vector2.new(),
                Thumbstick2 = Vector2.new(),
            }
        
            local keyboard = {
                W = 0,
                A = 0,
                S = 0,
                D = 0,
                E = 0,
                Q = 0,
                U = 0,
                H = 0,
                J = 0,
                K = 0,
                I = 0,
                Y = 0,
                Up = 0,
                Down = 0,
                LeftShift = 0,
                RightShift = 0,
            }
        
            local mouse = {
                Delta = Vector2.new(),
                MouseWheel = 0,
            }
        
            local NAV_GAMEPAD_SPEED  = Vector3.new(1, 1, 1)
            local NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
            local PAN_MOUSE_SPEED    = Vector2.new(1, 1)*(pi/64)
            local PAN_GAMEPAD_SPEED  = Vector2.new(1, 1)*(pi/8)
            local FOV_WHEEL_SPEED    = 1.0
            local FOV_GAMEPAD_SPEED  = 0.25
            local NAV_ADJ_SPEED      = 0.75
            local NAV_SHIFT_MUL      = 0.25
        
            local navSpeed = 1
        
            function Input.Vel(dt)
                navSpeed = clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)
        
                local kGamepad = Vector3.new(
                    thumbstickCurve(gamepad.Thumbstick1.x),
                    thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2),
                    thumbstickCurve(-gamepad.Thumbstick1.y)
                )*NAV_GAMEPAD_SPEED
        
                local kKeyboard = Vector3.new(
                    keyboard.D - keyboard.A + keyboard.K - keyboard.H,
                    keyboard.E - keyboard.Q + keyboard.I - keyboard.Y,
                    keyboard.S - keyboard.W + keyboard.J - keyboard.U
                )*NAV_KEYBOARD_SPEED
        
                local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)
        
                return (kGamepad + kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
            end
        
            function Input.Pan(dt)
                local kGamepad = Vector2.new(
                    thumbstickCurve(gamepad.Thumbstick2.y),
                    thumbstickCurve(-gamepad.Thumbstick2.x)
                )*PAN_GAMEPAD_SPEED
                local kMouse = mouse.Delta*PAN_MOUSE_SPEED
                mouse.Delta = Vector2.new()
                return kGamepad + kMouse
            end
        
            function Input.Fov(dt)
                local kGamepad = (gamepad.ButtonX - gamepad.ButtonY)*FOV_GAMEPAD_SPEED
                local kMouse = mouse.MouseWheel*FOV_WHEEL_SPEED
                mouse.MouseWheel = 0
                return kGamepad + kMouse
            end
        
            do
                local function Keypress(action, state, input)
                    keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
                    return Enum.ContextActionResult.Sink
                end
        
                local function GpButton(action, state, input)
                    gamepad[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
                    return Enum.ContextActionResult.Sink
                end
        
                local function MousePan(action, state, input)
                    local delta = input.Delta
                    mouse.Delta = Vector2.new(-delta.y, -delta.x)
                    return Enum.ContextActionResult.Sink
                end
        
                local function Thumb(action, state, input)
                    gamepad[input.KeyCode.Name] = input.Position
                    return Enum.ContextActionResult.Sink
                end
        
                local function Trigger(action, state, input)
                    gamepad[input.KeyCode.Name] = input.Position.z
                    return Enum.ContextActionResult.Sink
                end
        
                local function MouseWheel(action, state, input)
                    mouse[input.UserInputType.Name] = -input.Position.z
                    return Enum.ContextActionResult.Sink
                end
        
                local function Zero(t)
                    for k, v in pairs(t) do
                        t[k] = v*0
                    end
                end
        
                function Input.StartCapture()
                    ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY,
                        Enum.KeyCode.W, Enum.KeyCode.U,
                        Enum.KeyCode.A, Enum.KeyCode.H,
                        Enum.KeyCode.S, Enum.KeyCode.J,
                        Enum.KeyCode.D, Enum.KeyCode.K,
                        Enum.KeyCode.E, Enum.KeyCode.I,
                        Enum.KeyCode.Q, Enum.KeyCode.Y,
                        Enum.KeyCode.Up, Enum.KeyCode.Down
                    )
                    ContextActionService:BindActionAtPriority("FreecamMousePan",          MousePan,   false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement)
                    ContextActionService:BindActionAtPriority("FreecamMouseWheel",        MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel)
                    ContextActionService:BindActionAtPriority("FreecamGamepadButton",     GpButton,   false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY)
                    ContextActionService:BindActionAtPriority("FreecamGamepadTrigger",    Trigger,    false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2)
                    ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb,      false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2)
                end
        
                function Input.StopCapture()
                    navSpeed = 1
                    Zero(gamepad)
                    Zero(keyboard)
                    Zero(mouse)
                    ContextActionService:UnbindAction("FreecamKeyboard")
                    ContextActionService:UnbindAction("FreecamMousePan")
                    ContextActionService:UnbindAction("FreecamMouseWheel")
                    ContextActionService:UnbindAction("FreecamGamepadButton")
                    ContextActionService:UnbindAction("FreecamGamepadTrigger")
                    ContextActionService:UnbindAction("FreecamGamepadThumbstick")
                end
            end
        end
        
        local function GetFocusDistance(cameraFrame)
            local znear = 0.1
            local viewport = Camera.ViewportSize
            local projy = 2*tan(cameraFov/2)
            local projx = viewport.x/viewport.y*projy
            local fx = cameraFrame.rightVector
            local fy = cameraFrame.upVector
            local fz = cameraFrame.lookVector
        
            local minVect = Vector3.new()
            local minDist = 512
        
            for x = 0, 1, 0.5 do
                for y = 0, 1, 0.5 do
                    local cx = (x - 0.5)*projx
                    local cy = (y - 0.5)*projy
                    local offset = fx*cx - fy*cy + fz
                    local origin = cameraFrame.p + offset*znear
                    local _, hit = Workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
                    local dist = (hit - origin).magnitude
                    if minDist > dist then
                        minDist = dist
                        minVect = offset.unit
                    end
                end
            end
        
            return fz:Dot(minVect)*minDist
        end
        
        
        local function StepFreecam(dt)
            local vel = velSpring:Update(dt, Input.Vel(dt))
            local pan = panSpring:Update(dt, Input.Pan(dt))
            local fov = fovSpring:Update(dt, Input.Fov(dt))
        
            local zoomFactor = sqrt(tan(rad(70/2))/tan(rad(cameraFov/2)))
        
            cameraFov = clamp(cameraFov + fov*FOV_GAIN*(dt/zoomFactor), 1, 120)
            cameraRot = cameraRot + pan*PAN_GAIN*(dt/zoomFactor)
            cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y%(2*pi))
        
            local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*NAV_GAIN*dt)
            cameraPos = cameraCFrame.p
        
            Camera.CFrame = cameraCFrame
            Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
            Camera.FieldOfView = cameraFov
        end
        
        
        local PlayerState = {} do
            local mouseBehavior
            local mouseIconEnabled
            local cameraType
            local cameraFocus
            local cameraCFrame
            local cameraFieldOfView
            local screenGuis = {}
            local coreGuis = {
                Backpack = true,
                Chat = true,
                Health = true,
                PlayerList = true,
            }
            local setCores = {
                BadgesNotificationsActive = true,
                PointsNotificationsActive = true,
            }
        
            function PlayerState.Push()
                for name in pairs(coreGuis) do
                    coreGuis[name] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType[name])
                    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], false)
                end
                for name in pairs(setCores) do
                    setCores[name] = StarterGui:GetCore(name)
                    StarterGui:SetCore(name, false)
                end
                local playergui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
                if playergui then
                    for _, gui in pairs(playergui:GetChildren()) do
                        if gui:IsA("ScreenGui") and gui.Enabled then
                            screenGuis[#screenGuis + 1] = gui
                            gui.Enabled = false
                        end
                    end
                end
        
                cameraFieldOfView = Camera.FieldOfView
                Camera.FieldOfView = 70
        
                cameraType = Camera.CameraType
                Camera.CameraType = Enum.CameraType.Custom
        
                cameraCFrame = Camera.CFrame
                cameraFocus = Camera.Focus
        
                mouseIconEnabled = UserInputService.MouseIconEnabled
                UserInputService.MouseIconEnabled = false
        
                mouseBehavior = UserInputService.MouseBehavior
                UserInputService.MouseBehavior = Enum.MouseBehavior.Default
            end
        
            function PlayerState.Pop()
                for name, isEnabled in pairs(coreGuis) do
                    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], isEnabled)
                end
                for name, isEnabled in pairs(setCores) do
                    StarterGui:SetCore(name, isEnabled)
                end
                for _, gui in pairs(screenGuis) do
                    if gui.Parent then
                        gui.Enabled = true
                    end
                end
        
                Camera.FieldOfView = cameraFieldOfView
                cameraFieldOfView = nil
        
                Camera.CameraType = cameraType
                cameraType = nil
        
                Camera.CFrame = cameraCFrame
                cameraCFrame = nil
        
                Camera.Focus = cameraFocus
                cameraFocus = nil
        
                UserInputService.MouseIconEnabled = mouseIconEnabled
                mouseIconEnabled = nil
        
                UserInputService.MouseBehavior = mouseBehavior
                mouseBehavior = nil
            end
        end
        
        local function StartFreecam()
            local cameraCFrame = Camera.CFrame
            cameraRot = Vector2.new(cameraCFrame:toEulerAnglesYXZ())
            cameraPos = cameraCFrame.p
            cameraFov = Camera.FieldOfView
        
            velSpring:Reset(Vector3.new())
            panSpring:Reset(Vector2.new())
            fovSpring:Reset(0)
        
            PlayerState.Push()
            RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
            Input.StartCapture()
        end
        
        local function StopFreecam()
            Input.StopCapture()
            RunService:UnbindFromRenderStep("Freecam")
            PlayerState.Pop()
        end
        
        
        do
            local enabled = false
        
            local function ToggleFreecam()
                if enabled then
                    StopFreecam()
                else
                    StartFreecam()
                end
                enabled = not enabled
            end
        
            local function CheckMacro(macro)
                for i = 1, #macro - 1 do
                    if not UserInputService:IsKeyDown(macro[i]) then
                        return
                    end
                end
                ToggleFreecam()
            end
        
            local function HandleActivationInput(action, state, input)
                if state == Enum.UserInputState.Begin then
                    if input.KeyCode == FREECAM_MACRO_KB[#FREECAM_MACRO_KB] then
                        CheckMacro(FREECAM_MACRO_KB)
                    end
                end
                return Enum.ContextActionResult.Pass
            end
        
            ContextActionService:BindActionAtPriority("FreecamToggle", HandleActivationInput, false, TOGGLE_INPUT_PRIORITY, FREECAM_MACRO_KB[#FREECAM_MACRO_KB])
        end
    end,
    Menu = {
        Info = function(self)
            UI.Banner({
                Text = "Press Shift + P to Disable / Enable this function after clicked the button, It allows your camera to fly freely."
            })
        end
    }
})

Page.Toggle({
    Text = "Infinite Jump",
    Callback = function(value)
        InfJumpToggle = value
    end,
    Enabled = false
})

UIS.InputBegan:connect(function(input, process)
	if InfJumpToggle and input.KeyCode == Enum.KeyCode.Space and not process then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 7.5, 0)
	end
end)

Misc.Button({
    Text = "Delete Leaves",
    Callback = function()
        for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
            if string.match(v.Name, "Leaf") then
                v:Destroy()
            end
        end
    end,

    Menu = {
        Info = function(self)
            UI.Banner({
                Text = "Deletes the Leaves and makes your FPS a little bit bigger."
            })
        end,
    }
})

Misc.Button({
    Text = "Anti Drowning",
    Callback = function()
        game.ReplicatedStorage.RemoteEvents.Drown:Destroy()
    end,

    Menu = {
        Info = function(self)
            UI.Banner({
                Text = "Removes the Drown Remote Event wich makes it that you can not die to Drowning!"
            })
        end,
    }
})

Misc.Toggle({
    Text = "Auto Farm",
    Callback = function(value)
         if value == true then
            RunService:BindToRenderStep("hitspam", 1, function()
                if(game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.T)) then
                    local arg = plr:GetMouse().Target.Position
                    if plr:GetMouse().Target.Parent:FindFirstChild("Trunk") then
                        game.ReplicatedStorage.RemoteEvents.HarvestEvent:FireServer(plr:GetMouse().Target.Parent, arg)
                    end
                    
                    if plr:GetMouse().Target.Parent then
                        game.ReplicatedStorage.RemoteEvents.HarvestEvent:FireServer(plr:GetMouse().Target.Parent, arg)
                    end
                end
            end)
        elseif value == false then
            RunService:UnbindFromRenderStep("hitspam")
         end
    end,
    Enabled = false
})

IsFirstPerson = false
ShiftHeld = false
WHeld = false
SHeld = false
AHeld = false
DHeld = false
local gcheck = false
urspeed = 0.1
	
game:GetService("UserInputService").InputBegan:connect(GChecker)

function PressShift(inputObject,gameProcessedEvent)
	if inputObject.KeyCode == Enum.KeyCode.LeftShift and gameProcessedEvent == false and gcheck == true then
		ShiftHeld = true
	end
end
    
function ReleaseShift(inputObject,gameProcessed)
	if inputObject.KeyCode == Enum.KeyCode.LeftShift then
		ShiftHeld = false
	end
end
	
	
function PressW(inputObject,gameProcessedEvent)
	if inputObject.KeyCode == Enum.KeyCode.W and gameProcessedEvent == false and gcheck == true then
			WHeld = true
	end
end
	
function ReleaseW(inputObject,gameProcessed)
	if inputObject.KeyCode == Enum.KeyCode.W then
		WHeld = false
	end
end
	
function PressS(inputObject,gameProcessedEvent)
	if inputObject.KeyCode == Enum.KeyCode.S and gameProcessedEvent == false and gcheck == true then
		SHeld = true
    end
end
	
function ReleaseS(inputObject,gameProcessed)
	if inputObject.KeyCode == Enum.KeyCode.S then
		SHeld = false
	end
end
	
	
function PressA(inputObject,gameProcessedEvent)
	if inputObject.KeyCode == Enum.KeyCode.A and gameProcessedEvent == false and gcheck == true then
		AHeld = true
	end
end
	
function ReleaseA(inputObject,gameProcessed)
    if inputObject.KeyCode == Enum.KeyCode.A then
    AHeld = false
	end
end
	
	
function PressD(inputObject,gameProcessedEvent)
	if inputObject.KeyCode == Enum.KeyCode.D and gameProcessedEvent == false and gcheck == true then
		DHeld = true
	end
end
	
function ReleaseD(inputObject,gameProcessed)
	if inputObject.KeyCode == Enum.KeyCode.D then
		DHeld = false
	end
end
	
function CheckFirst(inputObject,gameProcessed)
	if inputObject.KeyCode == Enum.UserInputType.MouseWheel then
    	if (player.Character.Head.CFrame.p - workspace.CurrentCamera.CFrame.p).magnitude < 0.6 then
				IsFirstPerson = true
		elseif (player.Character.Head.CFrame.p - workspace.CurrentCamera.CFrame.p).magnitude > 0.6 then
            IsFirstPerson = false
    	end
	end
end
	
game:GetService("UserInputService").InputBegan:connect(PressShift)
game:GetService("UserInputService").InputEnded:connect(ReleaseShift)
	
game:GetService("UserInputService").InputBegan:connect(PressW)
game:GetService("UserInputService").InputEnded:connect(ReleaseW)
	
game:GetService("UserInputService").InputBegan:connect(PressS)
game:GetService("UserInputService").InputEnded:connect(ReleaseS)
	
game:GetService("UserInputService").InputBegan:connect(PressA)
game:GetService("UserInputService").InputEnded:connect(ReleaseA)
	
game:GetService("UserInputService").InputBegan:connect(PressD)
game:GetService("UserInputService").InputEnded:connect(ReleaseD)
	
game:GetService("UserInputService").InputChanged:connect(CheckFirst)
	
game:GetService("UserInputService").InputBegan:connect(ChangeFaster)
game:GetService("UserInputService").InputBegan:connect(ChangeSlower)
	
	
game:GetService('RunService').Stepped:connect(function()
if ShiftHeld == true then
	
if WHeld == true then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-urspeed)
end
	
if SHeld == true then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,urspeed)
end
	
if DHeld == true then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(urspeed,0,0)
end
	
if AHeld == true then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-urspeed,0,0)
end
	
	
end
end)

Misc.Toggle({
    Text = "Fast Run",
    Callback = function(value)
        gcheck = value
    end,
    Enabled = false
})

function horizontal(value)
	for i,v in pairs(game.ReplicatedStorage.RangedWeapons:GetChildren()) do
		for x,z in pairs(v:GetChildren()) do
			if z.Name == "HorizontalMult" then
				z.Value = value
			end
		end
	end
end

function vertical(value)
	for i,v in pairs(game.ReplicatedStorage.RangedWeapons:GetChildren()) do
		for x,z in pairs(v:GetChildren()) do
			if z.Name == "VerticalMult" then
				z.Value = value
			end
		end
	end
end

Mods.Toggle({
    Text = "No Recoil",
    Callback = function(value)
        if value == true then
            horizontal(0)
            vertical(0)
        elseif value == false then
            horizontal(0.9)
		    vertical(1)
        end
    end,
    Enabled = false
})

function muzzle(boolVal)
	for i,v in pairs(game.ReplicatedStorage.RangedWeapons:GetChildren()) do
		for x,z in pairs(v:GetChildren()) do
			if z.Name == "MuzzleEffect" then
				z.Value = boolVal
			end
		end
	end
end

Mods.Toggle({
    Text = "No Muzzle Flash",
    Callback = function(value)
        if value == true then
            muzzle(false)
        elseif value == false then
            muzzle(true)
        end
    end,
    Enabled = false
})

function bullethole(boolVal)
	for i,v in pairs(game.ReplicatedStorage.RangedWeapons:GetChildren()) do
		for x,z in pairs(v:GetChildren()) do
			if z.Name == "BulletHole" then
				z.Value = boolVal
			end
		end
	end
end

Mods.Toggle({
    Text = "No Bullet Hole",
    Callback = function(value)
        if value == true then
            bullethole(false)
        elseif value == false then
            bullethole(true)
        end
    end,
    Enabled = false
})

Visu.Toggle({
    Text = "C4 ESP",
    Callback = function(value)
        if value == true then
            for i, v in ipairs(storage) do
                if v:IsA("StringValue") and v.Name == "ItemName" then
                    if v.Value == "C4" then
                        local x = Instance.new("BillboardGui", v.Parent.Parent.Parent.Parent:FindFirstChildWhichIsA("BasePart"), 0.001)
                        local xT = Instance.new("TextLabel", x)
                        xT.Active = true
                        xT.Size = UDim2.new(0.5,0,0.5,0)
                        x.Active = true
                        x.AlwaysOnTop = true
                        x.Size = UDim2.new(3,0,3,0)
                        xT.Text = "C4"
                        xT.BackgroundTransparency = 1
                        x.Name = "C4X"
                        xT.TextColor3 = Color3.fromRGB(255, 25, 0)
                        xT.TextSize = 15
                    end
                end
            end
        elseif value == false then
            local storage = workspace.BuiltObjects:GetDescendants()

            for i, v in ipairs(storage) do
                if v:IsA("BillboardGui") and v.Name == "C4X" then
                    v:Destroy()
                end
            end
        end
    end,
    Enabled = false
})

Visu.Toggle({
    Text = "Rocket ESP",
    Callback = function(value)
        if value == true then
            for i, v in ipairs(storage) do
                if v:IsA("StringValue") and v.Name == "ItemName" then
                    if v.Value == "Rocket" then
                        local x = Instance.new("BillboardGui", v.Parent.Parent.Parent.Parent:FindFirstChildWhichIsA("BasePart"), 0.001)
                        local xT = Instance.new("TextLabel", x)
                        xT.Active = true
                        xT.Size = UDim2.new(0.5,0,0.5,0)
                        x.Active = true
                        x.AlwaysOnTop = true
                        x.Size = UDim2.new(3,0,3,0)
                        xT.Text = "Rocket"
                        xT.BackgroundTransparency = 1
                        x.Name = "RocketX"
                        xT.TextColor3 = Color3.fromRGB(255, 25, 0)
                        xT.TextSize = 15
                    end
                end
            end
        elseif value == false then
            local storage = workspace.BuiltObjects:GetDescendants()

            for i, v in ipairs(storage) do
                if v:IsA("BillboardGui") and v.Name == "RocketX" then
                    v:Destroy()
                end
            end
        end
    end,
    Enabled = false
})

Visu.Toggle({
    Text = "Plastic Explosive ESP",
    Callback = function(value)
        if value == true then
            for i, v in ipairs(storage) do
                if v:IsA("StringValue") and v.Name == "ItemName" then
                    if v.Value == "PlasticExplosive" then
                        local x = Instance.new("BillboardGui", v.Parent.Parent.Parent.Parent:FindFirstChildWhichIsA("BasePart"), 0.001)
                        local xT = Instance.new("TextLabel", x)
                        xT.Active = true
                        xT.Size = UDim2.new(0.5,0,0.5,0)
                        x.Active = true
                        x.AlwaysOnTop = true
                        x.Size = UDim2.new(3,0,3,0)
                        xT.Text = "Plastic Explosive"
                        xT.BackgroundTransparency = 1
                        x.Name = "PEX"
                        xT.TextColor3 = Color3.fromRGB(255, 25, 0)
                        xt.TextSize = 10
                    end
                end
            end
        elseif value == false then
            local storage = workspace.BuiltObjects:GetDescendants()

            for i, v in ipairs(storage) do
                if v:IsA("BillboardGui") and v.Name == "PEX" then
                    v:Destroy()
                end
            end
        end
    end,
    Enabled = false
})

Visu.Toggle({
    Text = "Improvised Explosive ESP",
    Callback = function(value)
        if value == true then
            for i, v in ipairs(storage) do
                if v:IsA("StringValue") and v.Name == "ItemName" then
                    if v.Value == "ImprovisedExplosive" then
                        local x = Instance.new("BillboardGui", v.Parent.Parent.Parent.Parent:FindFirstChildWhichIsA("BasePart"), 0.001)
                        local xT = Instance.new("TextLabel", x)
                        xT.Active = true
                        xT.Size = UDim2.new(0.5,0,0.5,0)
                        x.Active = true
                        x.AlwaysOnTop = true
                        x.Size = UDim2.new(3,0,3,0)
                        xT.Text = "Improv. Explosive"
                        xT.BackgroundTransparency = 1
                        x.Name = "IEX"
                        xT.TextColor3 = Color3.fromRGB(255, 25, 25)
                        xt.TextSize = 10
                    end
                end
            end
        elseif value == false then
            local storage = workspace.BuiltObjects:GetDescendants()

            for i, v in ipairs(storage) do
                if v:IsA("BillboardGui") and v.Name == "IEX" then
                    v:Destroy()
                end
            end
        end
    end,
    Enabled = false
})

Visu.Toggle({
    Text = "Gunpowder ESP",
    Callback = function(value)
        if value == true then
            for i, v in ipairs(storage) do
                if v:IsA("StringValue") and v.Name == "ItemName" then
                    if v.Value == "GunPowder" then
                        local x = Instance.new("BillboardGui", v.Parent.Parent.Parent.Parent:FindFirstChildWhichIsA("BasePart"), 0.001)
                        local xT = Instance.new("TextLabel", x)
                        xT.Active = true
                        xT.Size = UDim2.new(0.5,0,0.5,0)
                        x.Active = true
                        x.AlwaysOnTop = true
                        x.Size = UDim2.new(3,0,3,0)
                        xT.Text = "GP"
                        xT.BackgroundTransparency = 1
                        x.Name = "GPX"
                        xT.TextColor3 = Color3.fromRGB(0, 25, 255)
                        xT.TextSize = 15
                    end
                end
            end
        elseif value == false then
            local storage = workspace.BuiltObjects:GetDescendants()

            for i, v in ipairs(storage) do
                if v:IsA("BillboardGui") and v.Name == "GPX" then
                    v:Destroy()
                end
            end
        end
    end,
    Enabled = false
})

local sulfurCheck = false

 local function sulfurEsp()
    if sulfurCheck == true then
    for i,v in pairs(game.Workspace.SpawnerZones.OreNodes:GetDescendants()) do 
		if v.Name == "SulfurNode" then 
          local BillboardGui = Instance.new('BillboardGui')
          local TextLabel = Instance.new('TextLabel')

          BillboardGui.Name = "SulfurESP"
          BillboardGui.Parent = v:FindFirstChildWhichIsA("BasePart")
          BillboardGui.AlwaysOnTop = true 
          BillboardGui.Size = UDim2.new(0, 50, 0, 50)
          BillboardGui.StudsOffset = Vector3.new(0,2,0)
          
          TextLabel.Parent = BillboardGui
          TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
          TextLabel.BackgroundTransparency = 1
          TextLabel.Size = UDim2.new(1, 0, 1, 0)
          TextLabel.Text = "Sulfur"
          TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
          TextLabel.TextSize = 10
        end
    end
    end
 end

 local function destroy_sulfurEsp()
    for i,v in pairs(game.Workspace.SpawnerZones.OreNodes:GetDescendants()) do
        if v.Name == "SulfurESP" then
            v:Destroy()
        end
    end
 end

 Visu.Toggle({
    Text = "Sulfur ESP",
    Callback = function(value)
        if value == true then
            sulfurCheck = true
            sulfurEsp()
        elseif value == false then
            sulfurCheck = false
            destroy_sulfurEsp()
        end
    end,
    Enabled = false
})

local ironCheck = false

 local function ironEsp()
    if ironCheck == true then
    for i,v in pairs(game.Workspace.SpawnerZones.OreNodes:GetDescendants()) do 
		if v.Name == "IronNode" then 
          local BillboardGui = Instance.new('BillboardGui')
          local TextLabel = Instance.new('TextLabel')

          BillboardGui.Name = "IronESP"
          BillboardGui.Parent = v:FindFirstChildWhichIsA("BasePart")
          BillboardGui.AlwaysOnTop = true 
          BillboardGui.Size = UDim2.new(0, 50, 0, 50)
          BillboardGui.StudsOffset = Vector3.new(0,2,0)
          
          TextLabel.Parent = BillboardGui
          TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
          TextLabel.BackgroundTransparency = 1
          TextLabel.Size = UDim2.new(1, 0, 1, 0)
          TextLabel.Text = "Iron"
          TextLabel.TextColor3 = Color3.fromRGB(255, 0, 255)
          TextLabel.TextSize = 10 
        end
    end
    end
 end

 local function destroy_ironEsp()
    for i,v in pairs(game.Workspace.SpawnerZones.OreNodes:GetDescendants()) do
        if v.Name == "IronESP" then
            v:Destroy()
        end
    end
 end

 Visu.Toggle({
    Text = "Iron ESP",
    Callback = function(value)
        if value == true then
            ironCheck = true
            ironEsp()
        elseif value == false then
            ironCheck = false
            destroy_ironEsp()
        end
    end,
    Enabled = false
})

local stoneCheck = false

 local function stoneEsp()
    if stoneCheck == true then
    for i,v in pairs(game.Workspace.SpawnerZones.OreNodes:GetDescendants()) do 
		if v.Name == "StoneNode" then 
          local BillboardGui = Instance.new('BillboardGui')
          local TextLabel = Instance.new('TextLabel')

          BillboardGui.Name = "StoneESP"
          BillboardGui.Parent = v:FindFirstChildWhichIsA("BasePart")
          BillboardGui.AlwaysOnTop = true 
          BillboardGui.Size = UDim2.new(0, 50, 0, 50)
          BillboardGui.StudsOffset = Vector3.new(0,2,0)
          
          TextLabel.Parent = BillboardGui
          TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
          TextLabel.BackgroundTransparency = 1
          TextLabel.Size = UDim2.new(1, 0, 1, 0)
          TextLabel.Text = "Stone"
          TextLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
          TextLabel.TextSize = 10
        end
    end
    end
 end

 local function destroy_stoneEsp()
    for i,v in pairs(game.Workspace.SpawnerZones.OreNodes:GetDescendants()) do
        if v.Name == "StoneESP" then
            v:Destroy()
        end
    end
 end

 Visu.Toggle({
    Text = "Stone ESP",
    Callback = function(value)
        if value == true then
            stoneCheck = true
            stoneEsp()
        elseif value == false then
            stoneCheck = false
            destroy_stoneEsp()
        end
    end,
    Enabled = false
})

local aloeCheck = false

 local function AloeEsp()
    if aloeCheck == true then
    for i,v in pairs(game.Workspace.SpawnerZones.Plants:GetDescendants()) do 
		if v.Name == "AloeVera" then 
          local BillboardGui = Instance.new('BillboardGui')
          local TextLabel = Instance.new('TextLabel')

          BillboardGui.Name = "AloeESP"
          BillboardGui.Parent = v:FindFirstChildWhichIsA("BasePart")
          BillboardGui.AlwaysOnTop = true 
          BillboardGui.Size = UDim2.new(0, 50, 0, 50)
          BillboardGui.StudsOffset = Vector3.new(0,2,0)
          
          TextLabel.Parent = BillboardGui
          TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
          TextLabel.BackgroundTransparency = 1
          TextLabel.Size = UDim2.new(1, 0, 1, 0)
          TextLabel.Text = "Aloe"
          TextLabel.TextColor3 = Color3.fromRGB(25, 255, 25)
          TextLabel.TextSize = 10
        end
    end
    end
 end

 local function destroy_AloeEsp()
    for i,v in pairs(game.Workspace.SpawnerZones.Plants:GetDescendants()) do
        if v.Name == "AloeESP" then
            v:Destroy()
        end
    end
 end

 Visu.Toggle({
    Text = "Aloe ESP",
    Callback = function(value)
        if value == true then
            aloeCheck = true
            AloeEsp()
        elseif value == false then
            aloeCheck = false
            destroy_AloeEsp()
        end
    end,
    Enabled = false
})

local banditCheck = false

local function destroy_banditEsp()
    for i,v in pairs(game.Workspace.ScavZones.Town:GetDescendants()) do
        if v.Name == "BanditESP" then
            v:Destroy()
        end
    end
end

local function banditEsp()
    if banditCheck == true then
		for i,v in pairs(game.Workspace.ScavZones.Town:GetDescendants()) do 
			if v.Name == "Bandit_Rifleman" then
			if v:FindFirstChild("Head") then
			  local BillboardGui = Instance.new('BillboardGui')
			  local TextLabel = Instance.new('TextLabel')
			  
			  BillboardGui.Name = "BanditESP"
			  BillboardGui.Parent = v.Head
			  BillboardGui.AlwaysOnTop = true 
			  BillboardGui.Size = UDim2.new(0, 50, 0, 50)
			  BillboardGui.StudsOffset = Vector3.new(0,2,0)
			  
			  TextLabel.Parent = BillboardGui
			  TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
			  TextLabel.BackgroundTransparency = 1
			  TextLabel.Size = UDim2.new(1, 0, 1, 0)
			  TextLabel.Text = v.Name
			  TextLabel.TextColor3 = Color3.fromRGB(255, 50, 0)
			  TextLabel.TextSize = 12
			  end
		  end
		end
		end
end

Visu.Toggle({
    Text = "Bandit ESP",
    Callback = function(value)
        if value == true then
            repeat
                banditCheck = true
                destroy_banditEsp()
                banditEsp()
                wait(5)
            until banditCheck == false
        elseif value == false then
            banditCheck = false
            destroy_banditEsp()
        end
    end,
    Enabled = false
})

local bruteCheck = false

local function destroy_bruteEsp()
    for i,v in pairs(game.Workspace.ScavZones.Hoover:GetDescendants()) do
        if v.Name == "BruteESP" then
            v:Destroy()
        end
    end
end

local function bruteEsp()
    if bruteCheck == true then
		for i,v in pairs(game.Workspace.ScavZones.Hoover:GetDescendants()) do 
			if v.Name == "Bandit_Brute" then
			if v:FindFirstChild("Head") then
			  local BillboardGui = Instance.new('BillboardGui')
			  local TextLabel = Instance.new('TextLabel')
			  
			  BillboardGui.Name = "BruteESP"
			  BillboardGui.Parent = v.Head
			  BillboardGui.AlwaysOnTop = true 
			  BillboardGui.Size = UDim2.new(0, 50, 0, 50)
			  BillboardGui.StudsOffset = Vector3.new(0,2,0)
			  
			  TextLabel.Parent = BillboardGui
			  TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
			  TextLabel.BackgroundTransparency = 1
			  TextLabel.Size = UDim2.new(1, 0, 1, 0)
			  TextLabel.Text = v.Name
			  TextLabel.TextColor3 = Color3.fromRGB(255, 50, 0)
			  TextLabel.TextSize = 12
			  end
		  end
		end
		end
end

Visu.Toggle({
    Text = "Brute ESP",
    Callback = function(value)
        if value == true then
            repeat
                bruteCheck = true
                destroy_bruteEsp()
                bruteEsp()
                wait(5)
            until bruteCheck == false
        elseif value == false then
            bruteCheck = false
            destroy_bruteEsp()
        end
    end,
    Enabled = false
})

local kzCheck = false

local function destroy_kzEsp()
    for i,v in pairs(game.Workspace.ScavZones.KZOutpost:GetDescendants()) do
        if v.Name == "KZESP" then
            v:Destroy()
        end
    end
end

local function kzEsp()
    if kzCheck == true then
		for i,v in pairs(game.Workspace.ScavZones.KZOutpost:GetDescendants()) do 
			if v.Name == "KZ_PMC_Operator" then
			if v:FindFirstChild("Head") then
			  local BillboardGui = Instance.new('BillboardGui')
			  local TextLabel = Instance.new('TextLabel')
			  
			  BillboardGui.Name = "KZESP"
			  BillboardGui.Parent = v.Head
			  BillboardGui.AlwaysOnTop = true 
			  BillboardGui.Size = UDim2.new(0, 50, 0, 50)
			  BillboardGui.StudsOffset = Vector3.new(0,2,0)
			  
			  TextLabel.Parent = BillboardGui
			  TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
			  TextLabel.BackgroundTransparency = 1
			  TextLabel.Size = UDim2.new(1, 0, 1, 0)
			  TextLabel.Text = v.Name
			  TextLabel.TextColor3 = Color3.fromRGB(255, 50, 0)
			  TextLabel.TextSize = 12
			  end
		  end
		end
		end
end

Visu.Toggle({
    Text = "KZ ESP",
    Callback = function(value)
        if value == true then
            repeat
                kzCheck = true
                destroy_kzEsp()
                kzEsp()
                wait(5)
            until kzCheck == false
        elseif value == false then
            kzCheck = false
            destroy_kzEsp()
        end
    end,
    Enabled = false
})

local bossCheck = false

local function destroy_bossEsp()
    for i,v in pairs(game.Workspace.ScavZones:GetDescendants()) do
        if v.Name == "BossESP" then
            v:Destroy()
        end
    end
end

local function bossEsp()
    if bossCheck == true then
		for i,v in pairs(game.Workspace.ScavZones:GetDescendants()) do 
			if v.Name == "Dagger" then
			if v:FindFirstChild("Head") then
			  local BillboardGui = Instance.new('BillboardGui')
			  local TextLabel = Instance.new('TextLabel')
			  
			  BillboardGui.Name = "BossESP"
			  BillboardGui.Parent = v.Head
			  BillboardGui.AlwaysOnTop = true 
			  BillboardGui.Size = UDim2.new(0, 50, 0, 50)
			  BillboardGui.StudsOffset = Vector3.new(0,2,0)
			  
			  TextLabel.Parent = BillboardGui
			  TextLabel.BackgroundColor3 = Color3.new(1,1,1) 
			  TextLabel.BackgroundTransparency = 1
			  TextLabel.Size = UDim2.new(1, 0, 1, 0)
			  TextLabel.Text = v.Name
			  TextLabel.TextColor3 = Color3.fromRGB(0, 50, 255)
			  TextLabel.TextSize = 12
			  end
		  end
		end
		end
end

Visu.Toggle({
    Text = "Boss ESP",
    Callback = function(value)
        if value == true then
            repeat
                bossCheck = true
                destroy_bossEsp()
                bossEsp()
                wait(5)
            until bossCheck == false
        elseif value == false then
            bossCheck = false
            destroy_bossEsp()
        end
    end,
    Enabled = false
})


Effe.Button({
    Text = "Remove Sunrays",
    Callback = function()
        Lighting.Rays.Enabled = false
        Lighting.SunRaysAlwaysOn.Enabled = false
        Lighting.SunRaysAlwaysOnNight.Enabled = false
    end
})

Effe.Button({
    Text = "Remove Blur",
    Callback = function()
        Lighting.Blur.Size = 0
        Lighting.UnderWaterBlur.Size = 0
        Lighting.InventoryBlur.Size = 0
    end
})

local infLoop = true

repeat
    Lighting.LowHealthEffect.Enabled = false
    wait(2)

    local playername = game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("MainGui"):WaitForChild("Fullscreen"):WaitForChild("Inventory"):WaitForChild("ClothingFrame"):WaitForChild("PlayerName")
    playername.Text = version
until infLoop == false
